
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterH.js
 */
#pragma once

#include <react/renderer/components/view/ViewEventEmitter.h>


namespace facebook::react {
class RNKlarnaCheckoutViewEventEmitter : public ViewEventEmitter {
 public:
  using ViewEventEmitter::ViewEventEmitter;

  struct OnEventProductEvent {
      std::string action;
    std::string params;
    };

  struct OnEvent {
      OnEventProductEvent productEvent;
    };

  struct OnErrorError {
      bool isFatal;
    std::string message;
    std::string name;
    };

  struct OnError {
      OnErrorError error;
    };

  struct OnResized {
      std::string height;
    };

  struct OnCheckoutViewReady {
      
    };
  void onEvent(OnEvent value) const;

  void onError(OnError value) const;

  void onResized(OnResized value) const;

  void onCheckoutViewReady(OnCheckoutViewReady value) const;
};
class RNKlarnaPaymentViewEventEmitter : public ViewEventEmitter {
 public:
  using ViewEventEmitter::ViewEventEmitter;

  struct OnInitialized {
      
    };

  struct OnLoaded {
      
    };

  struct OnLoadedPaymentReview {
      
    };

  struct OnAuthorized {
      bool approved;
    std::string authToken;
    bool finalizeRequired;
    };

  struct OnReauthorized {
      bool approved;
    std::string authToken;
    };

  struct OnFinalized {
      bool approved;
    std::string authToken;
    };

  struct OnErrorError {
      std::string action;
    bool isFatal;
    std::string message;
    std::string name;
    std::string sessionId;
    };

  struct OnError {
      OnErrorError error;
    };

  struct OnResized {
      std::string height;
    };
  void onInitialized(OnInitialized value) const;

  void onLoaded(OnLoaded value) const;

  void onLoadedPaymentReview(OnLoadedPaymentReview value) const;

  void onAuthorized(OnAuthorized value) const;

  void onReauthorized(OnReauthorized value) const;

  void onFinalized(OnFinalized value) const;

  void onError(OnError value) const;

  void onResized(OnResized value) const;
};
class RNKlarnaStandaloneWebViewEventEmitter : public ViewEventEmitter {
 public:
  using ViewEventEmitter::ViewEventEmitter;

  struct OnLoadStartNavigationEvent {
      std::string url;
    bool loading;
    std::string title;
    bool canGoBack;
    bool canGoForward;
    };

  struct OnLoadStart {
      OnLoadStartNavigationEvent navigationEvent;
    };

  struct OnLoadEndNavigationEvent {
      std::string url;
    bool loading;
    std::string title;
    bool canGoBack;
    bool canGoForward;
    };

  struct OnLoadEnd {
      OnLoadEndNavigationEvent navigationEvent;
    };

  struct OnErrorError {
      std::string url;
    bool loading;
    std::string title;
    bool canGoBack;
    bool canGoForward;
    int code;
    std::string description;
    };

  struct OnError {
      OnErrorError error;
    };

  struct OnLoadProgressProgressEvent {
      std::string url;
    bool loading;
    std::string title;
    bool canGoBack;
    bool canGoForward;
    double progress;
    };

  struct OnLoadProgress {
      OnLoadProgressProgressEvent progressEvent;
    };

  struct OnKlarnaMessageKlarnaMessageEvent {
      std::string action;
    std::string params;
    };

  struct OnKlarnaMessage {
      OnKlarnaMessageKlarnaMessageEvent klarnaMessageEvent;
    };

  struct OnRenderProcessGoneRenderProcessGoneEvent {
      bool didCrash;
    };

  struct OnRenderProcessGone {
      OnRenderProcessGoneRenderProcessGoneEvent renderProcessGoneEvent;
    };
  void onLoadStart(OnLoadStart value) const;

  void onLoadEnd(OnLoadEnd value) const;

  void onError(OnError value) const;

  void onLoadProgress(OnLoadProgress value) const;

  void onKlarnaMessage(OnKlarnaMessage value) const;

  void onRenderProcessGone(OnRenderProcessGone value) const;
};
} // namespace facebook::react
